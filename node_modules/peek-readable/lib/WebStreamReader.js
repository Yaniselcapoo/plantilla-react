import { EndOfStreamError } from './EndOfFileStream.js';
export { EndOfStreamError } from './EndOfFileStream.js';
/**
 * Read from a WebStream
 * Reference: https://nodejs.org/api/webstreams.html#class-readablestreambyobreader
 */
export class WebStreamReader {
    constructor(stream) {
        this.peekQueue = [];
        this.reader = stream.getReader({ mode: 'byob' });
    }
    async peek(buffer, offset, length) {
        const bytesRead = await this.read(buffer, offset, length);
        this.peekQueue.push(buffer.subarray(offset, offset + bytesRead));
        return bytesRead;
    }
    async read(buffer, offset, length) {
        if (length === 0) {
            return 0;
        }
        if (this.peekQueue.length > 0) {
            let bytesRead = 0;
            while (this.peekQueue.length > 0 && bytesRead < length) {
                const peeked = this.peekQueue.shift();
                const toCopy = Math.min(peeked.length, length - bytesRead);
                buffer.set(peeked.subarray(0, toCopy), offset + bytesRead);
                bytesRead += toCopy;
                if (toCopy < peeked.length) {
                    this.peekQueue.unshift(peeked.subarray(toCopy));
                }
            }
            return bytesRead;
        }
        const result = await this.reader.read(new Uint8Array(length));
        if (result.done) {
            throw new EndOfStreamError();
        }
        if (result.value) {
            buffer.set(result.value, offset);
            return result.value.byteLength;
        }
        return 0;
    }
}
